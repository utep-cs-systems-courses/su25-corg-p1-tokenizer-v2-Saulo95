#includAe "tokenizer.h"
#include <stdio.h>
#include <stdlib.h>

int space_char (char c) {
  return c == ' ' || c == '\t';
}

int non_space_char (char c) {
  return c!= '\0' && c!= ' ' && != '\t';
}

char *token_start (char *s) {
  if (s==0) return 0;
  while(1){
    if(*s == '\0') return 0;
    if(!space_char(*s))return s;
    s++;
  }
}

char *token_terminator(char *token) {
  if (token == 0) return 0;
  while (1){
    if(*token == '\0' return token;
       if(!non_space_char(*token))return token;
       token++;
       }
  }

int count_tokens (char *str){
  int count = 0;
  char *start = token_start(s);

  while (1){
    if (start == 0 && *start == '\0') break;
    count++;
    char *end = token_terminator(start);
    start = token_start(end);
  } return count;
}

 char *copy_str(char *inStr, short len){
   char *copy=malloc(len +1);
   if (copy == 0){ return 0;
   }
   for (short i = 0; i < len; i++){
     copy[i] = inStr[i];
   }
   copy[len] = '\0';
   return copy;
 }





char **tokenize(char* str);
void print_tokens(char **tokens);
void free_tokens(char **tokens);
      
